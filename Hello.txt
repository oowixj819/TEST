Hello world

git add - 수정된 사항을 외부에 올리기 위해 준비시켜놓는
git commit - 준비시켜놓은 파일을 등록해놓는
git push - 등록해놓은 내용들을 원격 또는 로컬에 업데이트하는
git pull - 원격 또는 다른 브랜치에 있는 항목들을 끌어오는
git clone - 원격에 있는 리포지토리(저장소)를 내가 원하는 위치에 다운로드(복제본 생성)
git reset - 내가 원하는 버전으로 되돌아가는 것
git checkout - 스위치랑 비슷. 다른 브랜치로 이동하거나 다른 브랜치를 생성하거나, 다른 브랜치와 병합할 때 쓰임
git swtich - 다른 브랜치로 이동할 때.
git merge - 다른 브랜치와 병합할 때.
git log - 내가 여태까지 올린 목록들을 텍스트로 띄울 때.


백엔드
-> 사용자가 눈에 보이지 않는 영역들을 관리하고, 사용자간의 편의성을 위해서 동기화 작업이나 연동 처리를 주로하는 직군
-> DB(Date Base), 로그인, 장바구니, 구매, 동시접속, 게임 내에서 채널관리, 채팅, ,,, 
-> Node,js, TS, JAVA
-> SQL, Firebase, AWS, GCP 
-> CPU

프론트엔드 **
-> 사용자가 시각적,청각적으로 느껴지는 영역을 만들고 관리하는 직군
-> UI, 이펙트, 게임 사운드, 배너, 웹 또는 앱 디자인, 애니메이션, FX(이펙트), 시각적으로 보이는 상호작용
-> HTML, JAVA SCRIPT, 
-> Unity, Unreal, DirectX, OpenGL
-> GPU

뭐부터 해야되냐
-> 프론트 엔드 vs 백엔드 정하기
-> 웹(앱) vs 게임 개발 정하기
-> 개발에 필요한 내용을 훑어보고 뭘 배워야될지 찾아보기
-> 기초적인 문법과 함께 컴퓨터와 운영체제의 구조에 대해서 공부 (가장중요)
-> 문법이 어느 정도 갖추어진 상태라면, 강의를 들으면서 작은 프로젝트를 만들어가기
-> 코딩 테스트 사이트에서 내가 숙지한 문법을 테스트 해보기 (추천)
-> 프로젝트를 만들 때 git과 같은 형상관리 툴을 이용해서 내가 만든 기록들을 저장하고 활용해보기
-> 프로젝트를 만들면서, 세팅하면서 막힌 부분들을 어떻게 찾는지 익숙해져보기

